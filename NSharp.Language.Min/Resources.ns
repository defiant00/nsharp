use System.Resources

ns NSharp.Language.Min

public static class Resources
    private val HEADER str = "NSC-Min"
    private static fn ResourceManager ResourceManager

    static fn new() : ResourceManager = new ResourceManager("NSharp.Language.Min.Text", typeof(Min).Assembly)
    
    public static fn GetMessageKey(index int) str : "{HEADER}.Message.{index.ToString("X4")}"
    public static fn GetWarningKey(index int) str : "{HEADER}.Warning.{index.ToString("X4")}"
    public static fn GetErrorKey(index int) str : "{HEADER}.Error.{index.ToString("X4")}"
    public static fn GetFatalKey(index int) str : "{HEADER}.Fatal.{index.ToString("X4")}"
    
    public static fn GetString(key str) str : ResourceManager.GetString(key) ?? "**CANNOT FIND {key}**"
    public static fn GetMessage(index int) str : GetString(GetMessageKey(index))
    public static fn GetWarning(index int) str : GetString(GetWarningKey(index))
    public static fn GetError(index int) str : GetString(GetErrorKey(index))
    public static fn GetFatal(index int) str : GetString(GetFatalKey(index))

    public static fn FormatString(key str, var args []System.Object) str : str.Format(GetString(key), args)
    public static fn FormatMessage(index int, var args []System.Object) str : FormatString(GetMessageKey(index), args)
    public static fn FormatWarning(index int, var args []System.Object) str : FormatString(GetWarningKey(index), args)
    public static fn FormatError(index int, var args []System.Object) str : FormatString(GetErrorKey(index), args)
    public static fn FormatFatal(index int, var args []System.Object) str : FormatString(GetFatalKey(index), args)
